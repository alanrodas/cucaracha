Lenguaje Cucaracha
==================

El lenguaje cucaracha es una simple implementación de un lenguaje de
programación desarrollado para la materia de Parseo y Generación de Código de
la Universidad Nacional de Quilmes.

Esta implementación está realizada en Haskell utilizado Alex y Happy
como lexer y parser. Puede utilizar stack para correrlo.

Compilando el codigo
--------------------

Puede utilizar GHC y la plataforma haskell para compilar, pero sugerimos utilizar
Haskell Stack compilar la aplicación. Siga los siguientes pasos

1. [Instalar Stack ](https://docs.haskellstack.org/en/stable/README/)
2. Clonar este repositorio en una carpeta en su equipo
3. Abrir una terminar en dicha carpeta y ejecutar `stack setup`
4. En la misma terminal ejecutar `stack build alex`
5. En la misma terminal ejecutar `stack build happy`
6. En la misma termnal ejecutar `stack build`

Deberá ver una nueva carpeta bajo el nombre de `.stack-work` en la carpeta del
proyecto. Allí podrá encontrar el archivo ejecutable generado en la ruta
`.stack-work/dist/<architecture>/Cabal-<cabal-version>/build/cucaracha-exe/cucaracha-exe`
donde architecture dependerá del procesador y sistema operativo sobre el cual
se encuentre ejecutando (ej. x86_64-osx) y <cabal-version> dependerá de la versión
de cabal que este ejecutando (que a su vez depende de la versión de Stack instalada).

Corriendo la aplicación
-----------------------
Una vez construida la aplicación puede utilizar el binario generado directamente,
o puede continuar utilizando stack para mayor comodidad.

La aplicación espera un nombre de archivo como argumento de entrada, el cual será
el archivo conteniendo el programa "cucaracha" a parsear.

Utilice stack de la siguiente forma para probar el resultado:

```
stack exec cucaracha-exe "miarchivo.cucaracha"
```

Esto imprimirá en la consola el AST generado por el parser.
